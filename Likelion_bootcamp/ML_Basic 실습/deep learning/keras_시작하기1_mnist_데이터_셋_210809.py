# -*- coding: utf-8 -*-
"""Keras 시작하기1_MNIST 데이터 셋_210809.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OH3xE_ua0P8j9Uhn1GJso9s1iMBswoQs

# Keras 시작하기
* 라이브러리 불러오기
* 신경망을 위한 데이터 이해
* MNIST 데이터 셋
* 넘파이를 활용한 텐서 조작
"""

import keras
import tensorflow as tf
keras.__version__

print(tf.__version__)

"""# 02. 신경망을 위한 데이터 이해
* Tensor 자료형
* 스칼라 : 하나의 숫자만 담고 있는 텐서를 스칼라라고 한다.
* 0차원 텐서, 0D텐서
"""

import numpy as np
x = np.array(12)
print(x.ndim)
print(x.shape)
x

"""# 벡터(1D 텐서)
*숫자의 배열을 벡터(vector)또는 1D텐서라고 부른다. 1D 텐서는 딱 하나의 축을 가진다.
"""

x = np.array([10,20,30,40,50])
print(x.ndim)
print(x.shape)  # 몇 텐서인지 확인 
x

"""# 행렬(2D 텐서)
* 벡터의 배열을 행렬(matrix) 또는 2D텐서라 부른다. 행렬에는 2개의 축이 있다. 보통 행과 열이라 한다.
"""

x = np.array([ [11,21,31],
               [12,22,32],
               [13,23,33] ])
print(x.ndim)
print(x.shape)
x

"""# 3D텐서와 고차원 텐서
* 행렬들을 하나의 새로운 배열로 합치면 숫자가 채워진 직육면체 형태로 해석할 수 있는 3D텐서가 만들어진다.

* 이미지 데이터 (높이 픽셀, 넓이 픽셀, RGC(색깔)픽셀)
"""

x = np.array([
              [ [11,21,31],
               [12,22,32],
               [13,23,33] ],
              [ [11,21,31],
               [12,22,32],
               [13,23,33] ],
              [ [11,21,31],
               [12,22,32],
               [13,23,33] ]
             ])
print(x.ndim)
print(x.shape)
x

"""# 03. MNIST 데이터 셋"""

from keras.datasets import mnist
(train_images, train_labels), (test_images, test_labels) = mnist.load_data()

print(train_images.ndim)

train_images.shape  # 현재는 흑백(3D 텐서)  # 색깔까지 들어가면 (60000, 28, 28, 28.3) # 4D 텐서

import matplotlib.pyplot as plt

image = train_images[5]
plt.imshow(image, cmap=plt.cm.binary) # cmap=plt.cm.binary :색상
plt.show()

image = train_images[0:5, 0:28, ]
plt.imshow(image, cmap=plt.cm.binary) # cmap=plt.cm.binary :색상
plt.show()